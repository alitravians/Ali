import { useEffect, useRef } from 'react';

// Define sound effect types
export type SoundType = 'gameStart' | 'move' | 'eat' | 'gameOver';

// Interface for the SoundEffects component props
interface SoundEffectsProps {
  soundEnabled: boolean;
  currentSound?: SoundType;
}

export function SoundEffects({ soundEnabled, currentSound }: SoundEffectsProps) {
  // References to audio elements
  const gameStartRef = useRef<HTMLAudioElement>(null);
  const moveRef = useRef<HTMLAudioElement>(null);
  const eatRef = useRef<HTMLAudioElement>(null);
  const gameOverRef = useRef<HTMLAudioElement>(null);

  // Play sound effect based on the current sound type
  useEffect(() => {
    if (!soundEnabled || !currentSound) return;

    const audioRefs = {
      gameStart: gameStartRef,
      move: moveRef,
      eat: eatRef,
      gameOver: gameOverRef
    };

    const audioRef = audioRefs[currentSound];
    if (audioRef.current) {
      audioRef.current.currentTime = 0;
      console.log(`Playing sound: ${currentSound}`);
      audioRef.current.play().catch(error => {
        console.error('Error playing sound:', error);
      });
    }
  }, [soundEnabled, currentSound]);

  return (
    <div className="hidden">
      {/* Game start sound */}
      <audio ref={gameStartRef} preload="auto">
        <source src="data:audio/mpeg;base64,SUQzAwAAAAABOFRJVDIAAAASAAAAR2FtZSBTdGFydCBTb3VuZFRZRVIAAAAFAAAAMjAyNVRDT04AAAAPAAAAU25ha2UgR2FtZSBTRlhUQUxCAAAAEAAAAFNuYWtlIEdhbWUgQXVkaW8A//uQZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAFAAAGRgCFhYWFhYWFhYWFhYWFhYWFhYWFpaWlpaWlpaWlpaWlpaWlpaWlpdLS0tLS0tLS0tLS0tLS0tLS0tL///////////////////////////////////////////8AAAA8TEFNRTMuMTAwBK8AAAAAAAAAABUgJAMGQQABmgAABkYCzGMkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU=" type="audio/mpeg" />
      </audio>
      
      {/* Move sound */}
      <audio ref={moveRef} preload="auto">
        <source src="data:audio/mpeg;base64,SUQzAwAAAAABOFRJVDIAAAARAAAAU25ha2UgTW92ZSBTb3VuZFRZRVIAAAAFAAAAMjAyNVRDT04AAAAPAAAAU25ha2UgR2FtZSBTRlhUQUxCAAAAEAAAAFNuYWtlIEdhbWUgQXVkaW8A//uQZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAFAAAGRgCFhYWFhYWFhYWFhYWFhYWFhYWFpaWlpaWlpaWlpaWlpaWlpaWlpdLS0tLS0tLS0tLS0tLS0tLS0tL///////////////////////////////////////////8AAAA8TEFNRTMuMTAwBK8AAAAAAAAAABUgJAMGQQABmgAABkYCzGMkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU=" type="audio/mpeg" />
      </audio>
      
      {/* Eat sound */}
      <audio ref={eatRef} preload="auto">
        <source src="data:audio/mpeg;base64,SUQzAwAAAAABOFRJVDIAAAAPAAAAU25ha2UgRWF0IEZvb2RUWUVSAAAABQAAADIwMjVUQ09OAAAADwAAAFNuYWtlIEdhbWUgU0ZYVEFOQ09OAAAADwAAAFNuYWtlIEdhbWUgU0ZYA//uQZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAFAAAGRgCFhYWFhYWFhYWFhYWFhYWFhYWFpaWlpaWlpaWlpaWlpaWlpaWlpdLS0tLS0tLS0tLS0tLS0tLS0tL///////////////////////////////////////////8AAAA8TEFNRTMuMTAwBK8AAAAAAAAAABUgJAMGQQABmgAABkYCzGMkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU=" type="audio/mpeg" />
      </audio>
      
      {/* Game over sound */}
      <audio ref={gameOverRef} preload="auto">
        <source src="data:audio/mpeg;base64,SUQzAwAAAAABOFRJVDIAAAASAAAAR2FtZSBPdmVyIFNvdW5kIFRZRVIAAAAFAAAAMjAyNVRDT04AAAAPAAAAU25ha2UgR2FtZSBTRlhUQUxCAAAAEAAAAFNuYWtlIEdhbWUgQXVkaW8A//uQZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAFAAAGRgCFhYWFhYWFhYWFhYWFhYWFhYWFpaWlpaWlpaWlpaWlpaWlpaWlpdLS0tLS0tLS0tLS0tLS0tLS0tL///////////////////////////////////////////8AAAA8TEFNRTMuMTAwBK8AAAAAAAAAABUgJAMGQQABmgAABkYCzGMkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU=" type="audio/mpeg" />
      </audio>
    </div>
  );
}

export default SoundEffects;
